AWSTemplateFormatVersion: 2010-09-09
Description: CI/CD Pipeline for AWS Infrastructure deployment

Resources:
  # S3 bucket for Pipeline Artifacts
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      # BucketName: !Sub "${AWS::StackName}-artifacts"
      BucketName: nt548-lab2-361
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldArtifacts
            Status: Enabled
            ExpirationInDays: 30

  ArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactsBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowAllRolesListBucket
            Effect: "Allow"
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-codepipeline-role
                - !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-codebuild-role
                - !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-cloudformation-role
            Action:
              - s3:ListBucket
            Resource:
              - !Sub arn:aws:s3:::${ArtifactsBucket}
          - Sid: AllowAllRolesObjectAccess
            Effect: "Allow"
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-codepipeline-role
                - !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-cloudformation-role
                - !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-codebuild-role
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:GetObjectVersion
            Resource:
              - !Sub arn:aws:s3:::${ArtifactsBucket}/*

  # IAM role for CodeBuild
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-codebuild-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"

  # CodeBuild project
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-codebuild"
      Source:
        Type: CODEPIPELINE
        BuildSpec: "buildspec.yaml"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:5.0"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref ArtifactsBucket
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
      TimeoutInMinutes: 30

  # IAM role for CodePipeline
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-codepipeline-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"


  # IAM Role for CloudFormation
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-cloudformation-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"


  # CodePipeline
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${AWS::StackName}-pipeline"
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      Stages:
        # State 1: Get code from Github
        - Name: Source
          Actions:
            - Name: GitHub_Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: Yangchann
                Repo: DevOps-Lab2-CloudFormation
                Branch: main
                OAuthToken: "{{resolve:secretsmanager:TOKEN_GITHUB:SecretString:token}}"
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1

        # State 2: Build and test with CodeBuild
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

        # State 3: Deploy with CloudFormation
        - Name: Deploy
          Actions:
            - Name: DeployStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: infrastructure-stack
                TemplatePath: BuildOutput::main.yaml
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                ParameterOverrides: !Sub
                  -  |
                      {
                        "Environment": "dev",
                        "AllowedSSHIp": "1.54.205.235/32",
                        "KeyName": "nt548-lab2",
                        "AMI": "ami-004a7732acfcc1e2d",
                        "BucketName": "${BucketName}"
                      }
                  - BucketName: !Ref ArtifactsBucket
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

Outputs:
  PipelineName:
    Description: Name of the CodePipeline
    Value: !Ref Pipeline
  ArtifactsBucket:
    Description: S3 Bucket for Pipeline Artifacts
    Value: !Ref ArtifactsBucket
